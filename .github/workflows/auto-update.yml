name: Update Cloudflare Blocklist

on:
  schedule:
    - cron: "0 2 * * 0"  # Setiap hari Minggu jam 02:00 UTC
  workflow_dispatch:     # bisa trigger manual

jobs:
  update-blocklist:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # 3️⃣ Install dependencies
      - name: Install npm dependencies
        run: npm ci

      # 4️⃣ Delete existing rule
      - name: Delete rule (CGPS Filter Lists)
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: node cf_gateway_rule_delete.js

      # 5️⃣ Delete existing Domain List (jangan ada conflict)
      - name: Delete old list (CGPS List)
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: node cf_list_delete.js

      # 6️⃣ Download and prepare blocklist
      - name: Download AdGuard blocklist
        env:
          BLOCKLIST_URLS: |
            https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts
            https://raw.githubusercontent.com/ABPindo/indonesianadblockrules/master/subscriptions/hosts.txt

        run: node download_lists.js

      # 7️⃣ Create / update Cloudflare Domain List
      - name: Create new Domain List
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: node cf_list_create.js

      # 8️⃣ Create / update DNS policy
      - name: Create DNS Policy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: node cf_gateway_rule_create.js
